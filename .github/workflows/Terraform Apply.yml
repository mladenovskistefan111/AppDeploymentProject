name: Terraform Apply

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" tfplan

      - name: Set DB Endpoint
        id: set_endpoint
        run: |
          FULL_ENDPOINT=$(terraform output -raw rds_endpoint)
          DB_ENDPOINT=$(echo $FULL_ENDPOINT | awk -F: '{print $1}')
          echo "DB_ENDPOINT=$DB_ENDPOINT" >> $GITHUB_ENV

      - name: Set Bastion Host IP
        id: set_bastion_ip
        run: echo "BASTION_HOST_IP=$(terraform output -raw bastion_host_ip)" >> $GITHUB_ENV

      - name: Load SQL dump into PostgreSQL via Bastion Host
        run: |
          ssh -o StrictHostKeyChecking=no -i <(echo "${{ secrets.BASTION_PRIVATE_KEY }}") ubuntu@${{ env.BASTION_HOST_IP }} \
          'PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${DB_ENDPOINT} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -f /path/to/data.sql'
        env:
          DB_ENDPOINT: ${{ env.DB_ENDPOINT }}
