name: Terraform Apply

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Set DB Endpoint
        id: set_endpoint
        run: |
          FULL_ENDPOINT=$(terraform output -raw rds_endpoint)
          DB_ENDPOINT=$(echo $FULL_ENDPOINT | awk -F: '{print $1}')
          echo "DB_ENDPOINT=$DB_ENDPOINT" >> $GITHUB_ENV

      - name: Set Bastion Host IP
        id: set_bastion_ip
        run: echo "BASTION_HOST_IP=$(terraform output -raw bastion_host_ip)" >> $GITHUB_ENV

      - name: Save SSH private key to a temporary file
        run: |
          echo "${{ secrets.BASTION_PRIVATE_KEY }}" | base64 -d > /tmp/bastion_key
          chmod 600 /tmp/bastion_key

      - name: Wait for Bastion Host
        run: |
          for i in {1..10}; do
            if ssh -o StrictHostKeyChecking=no -i /tmp/bastion_key ubuntu@${{ env.BASTION_HOST_IP }} exit; then
              echo "Bastion host is ready!"
              break
            else
              echo "Waiting for Bastion host to initialize..."
              sleep 15
            fi
          done

      - name: Install PostgreSQL client on Bastion Host
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/bastion_key ubuntu@${{ env.BASTION_HOST_IP }} \
          'sudo apt-get update && sudo apt-get install -y postgresql-client'

      - name: Copy SQL dump to Bastion Host
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/bastion_key ./data/data.sql ubuntu@${{ env.BASTION_HOST_IP }}:/home/ubuntu/


      - name: Load SQL dump into PostgreSQL via Bastion Host
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/bastion_key ubuntu@${{ env.BASTION_HOST_IP }} << EOF
          export PGPASSWORD="${{ secrets.DB_PASSWORD }}"
          psql -h ${DB_ENDPOINT} -U "${{ secrets.DB_USER }}" -d "${{ secrets.DB_NAME }}" -f /home/ubuntu/data.sql
          EOF
        env:
          DB_ENDPOINT: ${{ env.DB_ENDPOINT }}

      - name: Remove temporary SSH key
        run: |
          rm /tmp/bastion_key
          
      - name: Save DB Endpoint to file
        run: echo "${{ env.DB_ENDPOINT }}" > db-endpoint.txt

      - name: Upload DB Endpoint as artifact
        uses: actions/upload-artifact@v3
        with:
          name: db-endpoint
          path: db-endpoint.txt
